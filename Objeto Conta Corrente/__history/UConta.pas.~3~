unit UConta;


interface

type
  TConta = Class
  private
    FNum : Integer;
    FNome : String;
    FSaldo : Currency;

      function getConta: Integer;
      function getNome: String;
      function getSaldo: Currency;

      procedure setConta(const Value: Integer);
      procedure setNome(const Value: String);
      procedure setSaldo(const Value: Currency);

  public
      Procedure alteraNome;
      Procedure deposito;
      Procedure Saque;


      Property Conta: Integer read getConta write setConta;
      Property Nome: String read getNome write setNome;
      Property Saldo: currency read getSaldo write setSaldo;

  End;

implementation

uses
  Vcl.Dialogs, System.SysUtils;

{ TConta }

procedure TConta.AlteraNome;
    begin
    Nome := inputbox('Alterar Nome do Titular', 'insira o nome' , '0');
    end;


procedure TConta.deposito;
var
    deposito : currency;
    begin
    deposito := strTocurr(inputbox('Depósito', 'Insira o Valor que quer depositar', '0'));
       Saldo := Saldo + deposito;
    end;

function TConta.getConta: Integer;
    begin
       result := FNum;
    end;

function TConta.getNome: String;
    begin
       result := FNome;
    end;

function TConta.getSaldo: Currency;
    begin
       result := FSaldo;
    end;


procedure TConta.Saque;
var
    saque : currency;
    begin
    saque := strTocurr(inputbox('Saque', 'Insira o Valor que quer sacar', '0'));
       Saldo := Saldo + saque;
    end;

procedure TConta.setConta(const Value: Integer);
    begin
     FNum := Value;
    end;

procedure TConta.setNome(const Value: String);
    begin
     FNome := Value;
    end;

procedure TConta.setSaldo(const Value: Currency);
    begin
     Fsaldo := Value;
    end;

end.
