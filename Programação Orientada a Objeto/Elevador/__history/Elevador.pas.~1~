unit Elevador;

interface
type


Televador = class
Private
fCap, fTotalAndares, fPessoas : Integer;
fAndarAtual: Integer;
    function getAndarAtual: Integer;
    function getCap: Integer;
    function getPessoas: Integer;
    function getTotalAndares: Integer;
    procedure setAndarAtual(const Value: Integer);
    procedure setCap(const Value: Integer);
    procedure setPessoas(const Value: Integer);
    procedure setTotalAndares(const Value: Integer);


Public
property Capacidade : Integer read getCap write setCap;
property AndarTot : Integer read getTotalAndares write setTotalAndares;
property Pessoas : Integer read getPessoas write setPessoas;
property Andar : Integer read getAndarAtual write setAndarAtual;


end;

implementation

{ Televador }

function Televador.getAndarAtual: Integer;
begin
Result := fAndarAtual
end;

function Televador.getCap: Integer;
begin
Result :=  fCap

end;

function Televador.getPessoas: Integer;
begin
Result := fPessoas
end;

function Televador.getTotalAndares: Integer;
begin
Result := fTotalAndares
end;

procedure Televador.setAndarAtual(const Value: Integer);
begin
fAndarAtual := value
end;

procedure Televador.setCap(const Value: Integer);
begin
fCap:= value
end;

procedure Televador.setPessoas(const Value: Integer);
begin
fPessoas := value
end;

procedure Televador.setTotalAndares(const Value: Integer);
begin
ftotalAndares := value
end;

end.
