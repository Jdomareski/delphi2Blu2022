unit TestUCalculadora;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, UCalculadora;

type
  // Test methods for class TCalculadora

  TestTCalculadora = class(TTestCase)
  strict private
    FCalculadora: TCalculadora;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure Testsomar;
    procedure Testsubtrair;
    procedure Testmultiplicar;
    procedure Testdividir;
  end;

implementation

procedure TestTCalculadora.SetUp;
begin
  FCalculadora := TCalculadora.Create;
end;

procedure TestTCalculadora.TearDown;
begin
  FCalculadora.Free;
  FCalculadora := nil;
end;

procedure TestTCalculadora.Testsomar;
var
  ReturnValue: Double;
  aNUm2: Double;
  aNUm1: Double;
begin
  aNUm2:= 1;
  aNUm1:= 2;
  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.somar(aNUm1, aNUm2);
  CheckEquals(3, ReturnValue, 'Erro no método somar');
  // TODO: Validate method results
end;

procedure TestTCalculadora.Testsubtrair;
var
  ReturnValue: Double;
  aNUm2: Double;
  aNUm1: Double;
begin

  aNUm1:= 5;
  aNUm2:= 2; // TODO: Setup method call parameters
  ReturnValue := FCalculadora.subtrair(aNUm1, aNUm2);
  // TODO: Validate method results
    CheckEquals(3, ReturnValue, 'Erro no método Subtrairr');
end;

procedure TestTCalculadora.Testmultiplicar;
var
  ReturnValue: Double;
  aNUm2: Double;
  aNUm1: Double;
begin
  aNUm2:= 5;
  aNUm1:= 2; // TODO: Setup method call parameters

  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.multiplicar(aNUm1, aNUm2);
  CheckEquals(10, ReturnValue, 'Erro no método Multiplicar');
  // TODO: Validate method results
end;

procedure TestTCalculadora.Testdividir;
var
  ReturnValue: Double;
  aNUm2: Double;
  aNUm1: Double;
begin
  aNUm2:= 4;
  aNUm1:= 8; // TODO: Setup method call parameters
  // TODO: Setup method call parameters
  ReturnValue := FCalculadora.dividir(aNUm1, aNUm2);
    CheckEquals(2, ReturnValue, 'Erro no método dividir');  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCalculadora.Suite);
end.

