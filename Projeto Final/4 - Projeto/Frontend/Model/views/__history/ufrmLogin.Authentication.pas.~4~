unit ufrmLogin.Authentication;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes,
  System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Objects, FMX.Layouts, FMX.Edit;

type
  TfrmLoginAuthentication = class(TForm)
    rectPrincipal: TRectangle;
    lytPrincipal: TLayout;
    imgLogo: TImage;
    lytBotoes: TLayout;
    rectNome: TRectangle;
    rectRegistrar: TRectangle;
    Label2: TLabel;
    rectVoltar: TRectangle;
    Label3: TLabel;
    edtNome: TEdit;
    rectLogin: TRectangle;
    edtLogin: TEdit;
    rectPassword: TRectangle;
    edtPassword: TEdit;
  private
    procedure logar;
    Procedure AbrirHome;
    Procedure VoltarTela;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmLoginAuthentication: TfrmLoginAuthentication;

implementation

{$R *.fmx}
{ TfrmLoginAuthentication }

procedure TfrmLoginAuthentication.AbrirHome;
begin

end;

procedure TfrmLoginAuthentication.logar;
var
  xserviceLogin: IService;
begin
  if trim(edtLogin.Text) = emptyStr then
    raise Exception.Create('Informe o Login');

  if trim(edtPassword.Text) = emptyStr then
    raise Exception.Create('Informe a Senha');

  xserviceLogin := TServiceLogin.Create(TLogin.Create(trim(edtLogin.Text),
    trim(edtPassword.Text)));

  try
    TServiceLogin(xserviceLogin).Autenticar;
    Self.AbriHome;
  except
    on e: exception do
    raise Exception.Create('Login:  ' + e.Message);
  end;
end;


  procedure TfrmLoginAuthentication.VoltarTela;
  begin
  if not assigned (frmHome) then
  frmHome := tfrmHome.Create(Application);

  frmHome.Show;
  Application.MainForm := frmHome;
  self.close;.

  end;

end.
