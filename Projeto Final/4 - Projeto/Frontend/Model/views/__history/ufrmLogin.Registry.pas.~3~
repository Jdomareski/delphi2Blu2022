unit ufrmLogin.Registry;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Objects, FMX.Layouts, FMX.Edit;

type
  TfrmLoginRegistrar = class(TForm)
    rectPrincipal: TRectangle;
    lytPrincipal: TLayout;
    imgLogo: TImage;
    lytBotoes: TLayout;
    rectNome: TRectangle;
    rectRegistrar: TRectangle;
    Label2: TLabel;
    rectVoltar: TRectangle;
    Label3: TLabel;
    edtNome: TEdit;
    rectLogin: TRectangle;
    edtLogin: TEdit;
    rectPassword: TRectangle;
    edtPassword: TEdit;
    procedure rectRegistrarClick(Sender: TObject);
  private
    { Private declarations }
    Procedure VoltarTela;
    Procedure Registrar;

  public
    { Public declarations }
  end;

var
  frmLoginRegistrar: TfrmLoginRegistrar;

implementation

{$R *.fmx}

uses UfrmLogin;

procedure TfrmLoginRegistrar.rectRegistrarClick(Sender: TObject);
var
xServiceUser : IService;
begin
if trim(edtNome.Text) = EmptyStr then
raise exception.Create('Informe o Nome');

if trim(edtLogin.Text) = EmptyStr then
raise exception.Create('Informe o Login');

if trim(edtPassword.Text) = EmptyStr then
raise exception.Create('Informe a Senha');

xServiceUser := TServiceUser.create(
TUser.create(trim(edtNome.Text),
            trim(edtLogin.Text),
            trim(edtPassword.Text)));

try
  xServiceUser.registrar;
  ShowMessage('Usuário registrado com sucesso. ');
  self.VoltarTela;
  except
  on e: exception do
  raise exception.Create('Erro  ' + E.Message);

end;




end;

end.
